# JanusGraph configuration sample: Cassandra & Elasticsearch over sockets
#
# This file connects to Cassandra and Elasticsearch services running
# on localhost over the Thrift API and the Elasticsearch native
# "Transport" API on their respective default ports.  The Cassandra
# and Elasticsearch services must already be running before starting
# JanusGraph with this file.

# The primary persistence provider used by JanusGraph.  This is required.
# It should be set one of JanusGraph's built-in shorthand names for its
# standard storage backends (shorthands: berkeleyje, cassandrathrift,
# cassandra, astyanax, embeddedcassandra, cql, hbase, inmemory) or to the
# full package and classname of a custom/third-party StoreManager
# implementation.
#

gremlin.graph=org.janusgraph.core.JanusGraphFactory

# Storage backend configuration
storage.backend=cassandra
storage.hostname=127.0.0.1

# Cache configuration
cache.db-cache = true
cache.db-cache-clean-wait = 20
cache.db-cache-time = 180000
cache.db-cache-size = 0.25

# Backend indexing configuration
index.search.backend=elasticsearch
index.search.hostname=127.0.0.1

# Enabling batch loading disables JanusGraph internal consistency checks in a number of places. 
# Most importantly, it disables locking. 
# In other words, JanusGraph assumes that the data to be loaded into JanusGraph is consistent 
# with the graph and hence disables its own checks in the interest of performance.
#storage.batch-loading = true

# enable custom id
#graph.set-vertex-id = true
standardElementConstraints=false


